{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","App","state","this","className","type","classNames","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAOb,EAASc,SAIlBT,GACFC,EAAaS,UAGRT,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMgB,EAAb,4MACEC,MAAQ,CACNb,SAAUJ,EAASc,KACnBT,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCa,KAAKD,MAA9Bb,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYjB,IAAaJ,EAASU,WACtCY,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASU,YALvC,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYjB,IAAaJ,EAASY,SACtCU,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASY,UALvC,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAA2B,IAAfhB,IAChBiB,QAAS,WACP,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBZ,YAAaY,EAAMZ,gBANzB,sBAaEa,KAAKD,MAAMb,WAAaJ,EAASc,OAAuB,IAAfT,IAEvC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZlB,YAAY,EACZD,SAAUJ,EAASc,QANzB,sBAeN,6BACE,6BACGZ,EAAkBD,EAAiBiB,KAAKD,OAAOO,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAnEvB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0579683f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': isReversed !== true })}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || isReversed === true)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.setState({\n                    isReversed: false,\n                    sortType: SortType.NONE,\n                  });\n                }}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}